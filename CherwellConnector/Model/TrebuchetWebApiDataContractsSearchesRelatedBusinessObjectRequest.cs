/* 
 * 
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

namespace CherwellConnector.Model
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.Linq;
    using System.Runtime.Serialization;
    using System.Text;

    using Newtonsoft.Json;

    /// <summary>
    /// TrebuchetWebApiDataContractsSearchesRelatedBusinessObjectRequest
    /// </summary>
    [DataContract]
    public partial class TrebuchetWebApiDataContractsSearchesRelatedBusinessObjectRequest :  IEquatable<TrebuchetWebApiDataContractsSearchesRelatedBusinessObjectRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TrebuchetWebApiDataContractsSearchesRelatedBusinessObjectRequest" /> class.
        /// </summary>
        /// <param name="allFields">allFields.</param>
        /// <param name="customGridId">customGridId.</param>
        /// <param name="fieldsList">fieldsList.</param>
        /// <param name="filters">filters.</param>
        /// <param name="pageNumber">pageNumber.</param>
        /// <param name="pageSize">pageSize.</param>
        /// <param name="parentBusObId">parentBusObId.</param>
        /// <param name="parentBusObRecId">parentBusObRecId.</param>
        /// <param name="relationshipId">relationshipId.</param>
        /// <param name="sorting">sorting.</param>
        /// <param name="useDefaultGrid">useDefaultGrid.</param>
        public TrebuchetWebApiDataContractsSearchesRelatedBusinessObjectRequest(bool? allFields = default(bool?), string customGridId = default(string), List<string> fieldsList = default(List<string>), List<TrebuchetWebApiDataContractsSearchesFilterInfo> filters = default(List<TrebuchetWebApiDataContractsSearchesFilterInfo>), int? pageNumber = default(int?), int? pageSize = default(int?), string parentBusObId = default(string), string parentBusObRecId = default(string), string relationshipId = default(string), List<TrebuchetWebApiDataContractsSearchesSortInfo> sorting = default(List<TrebuchetWebApiDataContractsSearchesSortInfo>), bool? useDefaultGrid = default(bool?))
        {
            this.AllFields = allFields;
            this.CustomGridId = customGridId;
            this.FieldsList = fieldsList;
            this.Filters = filters;
            this.PageNumber = pageNumber;
            this.PageSize = pageSize;
            this.ParentBusObId = parentBusObId;
            this.ParentBusObRecId = parentBusObRecId;
            this.RelationshipId = relationshipId;
            this.Sorting = sorting;
            this.UseDefaultGrid = useDefaultGrid;
        }
        
        /// <summary>
        /// Gets or Sets AllFields
        /// </summary>
        [DataMember(Name="allFields", EmitDefaultValue=false)]
        public bool? AllFields { get; set; }

        /// <summary>
        /// Gets or Sets CustomGridId
        /// </summary>
        [DataMember(Name="customGridId", EmitDefaultValue=false)]
        public string CustomGridId { get; set; }

        /// <summary>
        /// Gets or Sets FieldsList
        /// </summary>
        [DataMember(Name="fieldsList", EmitDefaultValue=false)]
        public List<string> FieldsList { get; set; }

        /// <summary>
        /// Gets or Sets Filters
        /// </summary>
        [DataMember(Name="filters", EmitDefaultValue=false)]
        public List<TrebuchetWebApiDataContractsSearchesFilterInfo> Filters { get; set; }

        /// <summary>
        /// Gets or Sets PageNumber
        /// </summary>
        [DataMember(Name="pageNumber", EmitDefaultValue=false)]
        public int? PageNumber { get; set; }

        /// <summary>
        /// Gets or Sets PageSize
        /// </summary>
        [DataMember(Name="pageSize", EmitDefaultValue=false)]
        public int? PageSize { get; set; }

        /// <summary>
        /// Gets or Sets ParentBusObId
        /// </summary>
        [DataMember(Name="parentBusObId", EmitDefaultValue=false)]
        public string ParentBusObId { get; set; }

        /// <summary>
        /// Gets or Sets ParentBusObRecId
        /// </summary>
        [DataMember(Name="parentBusObRecId", EmitDefaultValue=false)]
        public string ParentBusObRecId { get; set; }

        /// <summary>
        /// Gets or Sets RelationshipId
        /// </summary>
        [DataMember(Name="relationshipId", EmitDefaultValue=false)]
        public string RelationshipId { get; set; }

        /// <summary>
        /// Gets or Sets Sorting
        /// </summary>
        [DataMember(Name="sorting", EmitDefaultValue=false)]
        public List<TrebuchetWebApiDataContractsSearchesSortInfo> Sorting { get; set; }

        /// <summary>
        /// Gets or Sets UseDefaultGrid
        /// </summary>
        [DataMember(Name="useDefaultGrid", EmitDefaultValue=false)]
        public bool? UseDefaultGrid { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TrebuchetWebApiDataContractsSearchesRelatedBusinessObjectRequest {\n");
            sb.Append("  AllFields: ").Append(this.AllFields).Append("\n");
            sb.Append("  CustomGridId: ").Append(this.CustomGridId).Append("\n");
            sb.Append("  FieldsList: ").Append(this.FieldsList).Append("\n");
            sb.Append("  Filters: ").Append(this.Filters).Append("\n");
            sb.Append("  PageNumber: ").Append(this.PageNumber).Append("\n");
            sb.Append("  PageSize: ").Append(this.PageSize).Append("\n");
            sb.Append("  ParentBusObId: ").Append(this.ParentBusObId).Append("\n");
            sb.Append("  ParentBusObRecId: ").Append(this.ParentBusObRecId).Append("\n");
            sb.Append("  RelationshipId: ").Append(this.RelationshipId).Append("\n");
            sb.Append("  Sorting: ").Append(this.Sorting).Append("\n");
            sb.Append("  UseDefaultGrid: ").Append(this.UseDefaultGrid).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TrebuchetWebApiDataContractsSearchesRelatedBusinessObjectRequest);
        }

        /// <summary>
        /// Returns true if TrebuchetWebApiDataContractsSearchesRelatedBusinessObjectRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of TrebuchetWebApiDataContractsSearchesRelatedBusinessObjectRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TrebuchetWebApiDataContractsSearchesRelatedBusinessObjectRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AllFields == input.AllFields ||
                    (this.AllFields != null &&
                    this.AllFields.Equals(input.AllFields))
                ) && 
                (
                    this.CustomGridId == input.CustomGridId ||
                    (this.CustomGridId != null &&
                    this.CustomGridId.Equals(input.CustomGridId))
                ) && 
                (
                    this.FieldsList == input.FieldsList ||
                    this.FieldsList != null &&
                    this.FieldsList.SequenceEqual(input.FieldsList)
                ) && 
                (
                    this.Filters == input.Filters ||
                    this.Filters != null &&
                    this.Filters.SequenceEqual(input.Filters)
                ) && 
                (
                    this.PageNumber == input.PageNumber ||
                    (this.PageNumber != null &&
                    this.PageNumber.Equals(input.PageNumber))
                ) && 
                (
                    this.PageSize == input.PageSize ||
                    (this.PageSize != null &&
                    this.PageSize.Equals(input.PageSize))
                ) && 
                (
                    this.ParentBusObId == input.ParentBusObId ||
                    (this.ParentBusObId != null &&
                    this.ParentBusObId.Equals(input.ParentBusObId))
                ) && 
                (
                    this.ParentBusObRecId == input.ParentBusObRecId ||
                    (this.ParentBusObRecId != null &&
                    this.ParentBusObRecId.Equals(input.ParentBusObRecId))
                ) && 
                (
                    this.RelationshipId == input.RelationshipId ||
                    (this.RelationshipId != null &&
                    this.RelationshipId.Equals(input.RelationshipId))
                ) && 
                (
                    this.Sorting == input.Sorting ||
                    this.Sorting != null &&
                    this.Sorting.SequenceEqual(input.Sorting)
                ) && 
                (
                    this.UseDefaultGrid == input.UseDefaultGrid ||
                    (this.UseDefaultGrid != null &&
                    this.UseDefaultGrid.Equals(input.UseDefaultGrid))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AllFields != null)
                    hashCode = hashCode * 59 + this.AllFields.GetHashCode();
                if (this.CustomGridId != null)
                    hashCode = hashCode * 59 + this.CustomGridId.GetHashCode();
                if (this.FieldsList != null)
                    hashCode = hashCode * 59 + this.FieldsList.GetHashCode();
                if (this.Filters != null)
                    hashCode = hashCode * 59 + this.Filters.GetHashCode();
                if (this.PageNumber != null)
                    hashCode = hashCode * 59 + this.PageNumber.GetHashCode();
                if (this.PageSize != null)
                    hashCode = hashCode * 59 + this.PageSize.GetHashCode();
                if (this.ParentBusObId != null)
                    hashCode = hashCode * 59 + this.ParentBusObId.GetHashCode();
                if (this.ParentBusObRecId != null)
                    hashCode = hashCode * 59 + this.ParentBusObRecId.GetHashCode();
                if (this.RelationshipId != null)
                    hashCode = hashCode * 59 + this.RelationshipId.GetHashCode();
                if (this.Sorting != null)
                    hashCode = hashCode * 59 + this.Sorting.GetHashCode();
                if (this.UseDefaultGrid != null)
                    hashCode = hashCode * 59 + this.UseDefaultGrid.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
