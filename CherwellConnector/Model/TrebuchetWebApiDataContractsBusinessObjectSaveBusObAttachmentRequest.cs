/* 
 * 
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

namespace CherwellConnector.Model
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.Runtime.Serialization;
    using System.Text;

    using Newtonsoft.Json;

    /// <summary>
    /// TrebuchetWebApiDataContractsBusinessObjectSaveBusObAttachmentRequest
    /// </summary>
    [DataContract]
    public partial class TrebuchetWebApiDataContractsBusinessObjectSaveBusObAttachmentRequest :  IEquatable<TrebuchetWebApiDataContractsBusinessObjectSaveBusObAttachmentRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TrebuchetWebApiDataContractsBusinessObjectSaveBusObAttachmentRequest" /> class.
        /// </summary>
        /// <param name="attachBusObId">attachBusObId.</param>
        /// <param name="attachBusObName">attachBusObName.</param>
        /// <param name="attachBusObPublicId">attachBusObPublicId.</param>
        /// <param name="attachBusObRecId">attachBusObRecId.</param>
        /// <param name="busObId">busObId.</param>
        /// <param name="busObName">busObName.</param>
        /// <param name="busObPublicId">busObPublicId.</param>
        /// <param name="busObRecId">busObRecId.</param>
        /// <param name="comment">comment.</param>
        /// <param name="includeLinks">includeLinks.</param>
        public TrebuchetWebApiDataContractsBusinessObjectSaveBusObAttachmentRequest(string attachBusObId = default(string), string attachBusObName = default(string), string attachBusObPublicId = default(string), string attachBusObRecId = default(string), string busObId = default(string), string busObName = default(string), string busObPublicId = default(string), string busObRecId = default(string), string comment = default(string), bool? includeLinks = default(bool?))
        {
            this.AttachBusObId = attachBusObId;
            this.AttachBusObName = attachBusObName;
            this.AttachBusObPublicId = attachBusObPublicId;
            this.AttachBusObRecId = attachBusObRecId;
            this.BusObId = busObId;
            this.BusObName = busObName;
            this.BusObPublicId = busObPublicId;
            this.BusObRecId = busObRecId;
            this.Comment = comment;
            this.IncludeLinks = includeLinks;
        }
        
        /// <summary>
        /// Gets or Sets AttachBusObId
        /// </summary>
        [DataMember(Name="attachBusObId", EmitDefaultValue=false)]
        public string AttachBusObId { get; set; }

        /// <summary>
        /// Gets or Sets AttachBusObName
        /// </summary>
        [DataMember(Name="attachBusObName", EmitDefaultValue=false)]
        public string AttachBusObName { get; set; }

        /// <summary>
        /// Gets or Sets AttachBusObPublicId
        /// </summary>
        [DataMember(Name="attachBusObPublicId", EmitDefaultValue=false)]
        public string AttachBusObPublicId { get; set; }

        /// <summary>
        /// Gets or Sets AttachBusObRecId
        /// </summary>
        [DataMember(Name="attachBusObRecId", EmitDefaultValue=false)]
        public string AttachBusObRecId { get; set; }

        /// <summary>
        /// Gets or Sets BusObId
        /// </summary>
        [DataMember(Name="busObId", EmitDefaultValue=false)]
        public string BusObId { get; set; }

        /// <summary>
        /// Gets or Sets BusObName
        /// </summary>
        [DataMember(Name="busObName", EmitDefaultValue=false)]
        public string BusObName { get; set; }

        /// <summary>
        /// Gets or Sets BusObPublicId
        /// </summary>
        [DataMember(Name="busObPublicId", EmitDefaultValue=false)]
        public string BusObPublicId { get; set; }

        /// <summary>
        /// Gets or Sets BusObRecId
        /// </summary>
        [DataMember(Name="busObRecId", EmitDefaultValue=false)]
        public string BusObRecId { get; set; }

        /// <summary>
        /// Gets or Sets Comment
        /// </summary>
        [DataMember(Name="comment", EmitDefaultValue=false)]
        public string Comment { get; set; }

        /// <summary>
        /// Gets or Sets IncludeLinks
        /// </summary>
        [DataMember(Name="includeLinks", EmitDefaultValue=false)]
        public bool? IncludeLinks { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TrebuchetWebApiDataContractsBusinessObjectSaveBusObAttachmentRequest {\n");
            sb.Append("  AttachBusObId: ").Append(this.AttachBusObId).Append("\n");
            sb.Append("  AttachBusObName: ").Append(this.AttachBusObName).Append("\n");
            sb.Append("  AttachBusObPublicId: ").Append(this.AttachBusObPublicId).Append("\n");
            sb.Append("  AttachBusObRecId: ").Append(this.AttachBusObRecId).Append("\n");
            sb.Append("  BusObId: ").Append(this.BusObId).Append("\n");
            sb.Append("  BusObName: ").Append(this.BusObName).Append("\n");
            sb.Append("  BusObPublicId: ").Append(this.BusObPublicId).Append("\n");
            sb.Append("  BusObRecId: ").Append(this.BusObRecId).Append("\n");
            sb.Append("  Comment: ").Append(this.Comment).Append("\n");
            sb.Append("  IncludeLinks: ").Append(this.IncludeLinks).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TrebuchetWebApiDataContractsBusinessObjectSaveBusObAttachmentRequest);
        }

        /// <summary>
        /// Returns true if TrebuchetWebApiDataContractsBusinessObjectSaveBusObAttachmentRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of TrebuchetWebApiDataContractsBusinessObjectSaveBusObAttachmentRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TrebuchetWebApiDataContractsBusinessObjectSaveBusObAttachmentRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AttachBusObId == input.AttachBusObId ||
                    (this.AttachBusObId != null &&
                    this.AttachBusObId.Equals(input.AttachBusObId))
                ) && 
                (
                    this.AttachBusObName == input.AttachBusObName ||
                    (this.AttachBusObName != null &&
                    this.AttachBusObName.Equals(input.AttachBusObName))
                ) && 
                (
                    this.AttachBusObPublicId == input.AttachBusObPublicId ||
                    (this.AttachBusObPublicId != null &&
                    this.AttachBusObPublicId.Equals(input.AttachBusObPublicId))
                ) && 
                (
                    this.AttachBusObRecId == input.AttachBusObRecId ||
                    (this.AttachBusObRecId != null &&
                    this.AttachBusObRecId.Equals(input.AttachBusObRecId))
                ) && 
                (
                    this.BusObId == input.BusObId ||
                    (this.BusObId != null &&
                    this.BusObId.Equals(input.BusObId))
                ) && 
                (
                    this.BusObName == input.BusObName ||
                    (this.BusObName != null &&
                    this.BusObName.Equals(input.BusObName))
                ) && 
                (
                    this.BusObPublicId == input.BusObPublicId ||
                    (this.BusObPublicId != null &&
                    this.BusObPublicId.Equals(input.BusObPublicId))
                ) && 
                (
                    this.BusObRecId == input.BusObRecId ||
                    (this.BusObRecId != null &&
                    this.BusObRecId.Equals(input.BusObRecId))
                ) && 
                (
                    this.Comment == input.Comment ||
                    (this.Comment != null &&
                    this.Comment.Equals(input.Comment))
                ) && 
                (
                    this.IncludeLinks == input.IncludeLinks ||
                    (this.IncludeLinks != null &&
                    this.IncludeLinks.Equals(input.IncludeLinks))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AttachBusObId != null)
                    hashCode = hashCode * 59 + this.AttachBusObId.GetHashCode();
                if (this.AttachBusObName != null)
                    hashCode = hashCode * 59 + this.AttachBusObName.GetHashCode();
                if (this.AttachBusObPublicId != null)
                    hashCode = hashCode * 59 + this.AttachBusObPublicId.GetHashCode();
                if (this.AttachBusObRecId != null)
                    hashCode = hashCode * 59 + this.AttachBusObRecId.GetHashCode();
                if (this.BusObId != null)
                    hashCode = hashCode * 59 + this.BusObId.GetHashCode();
                if (this.BusObName != null)
                    hashCode = hashCode * 59 + this.BusObName.GetHashCode();
                if (this.BusObPublicId != null)
                    hashCode = hashCode * 59 + this.BusObPublicId.GetHashCode();
                if (this.BusObRecId != null)
                    hashCode = hashCode * 59 + this.BusObRecId.GetHashCode();
                if (this.Comment != null)
                    hashCode = hashCode * 59 + this.Comment.GetHashCode();
                if (this.IncludeLinks != null)
                    hashCode = hashCode * 59 + this.IncludeLinks.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
