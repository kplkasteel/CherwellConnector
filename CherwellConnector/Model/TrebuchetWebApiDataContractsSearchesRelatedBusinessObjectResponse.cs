/* 
 * 
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

namespace CherwellConnector.Model
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.Linq;
    using System.Runtime.Serialization;
    using System.Text;

    using Newtonsoft.Json;

    /// <summary>
    /// TrebuchetWebApiDataContractsSearchesRelatedBusinessObjectResponse
    /// </summary>
    [DataContract]
    public partial class TrebuchetWebApiDataContractsSearchesRelatedBusinessObjectResponse :  IEquatable<TrebuchetWebApiDataContractsSearchesRelatedBusinessObjectResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TrebuchetWebApiDataContractsSearchesRelatedBusinessObjectResponse" /> class.
        /// </summary>
        /// <param name="errorCode">errorCode.</param>
        /// <param name="errorMessage">errorMessage.</param>
        /// <param name="hasError">hasError.</param>
        /// <param name="links">links.</param>
        /// <param name="pageNumber">pageNumber.</param>
        /// <param name="pageSize">pageSize.</param>
        /// <param name="parentBusObId">parentBusObId.</param>
        /// <param name="parentBusObPublicId">parentBusObPublicId.</param>
        /// <param name="parentBusObRecId">parentBusObRecId.</param>
        /// <param name="relatedBusinessObjects">relatedBusinessObjects.</param>
        /// <param name="relationshipId">relationshipId.</param>
        /// <param name="totalRecords">totalRecords.</param>
        public TrebuchetWebApiDataContractsSearchesRelatedBusinessObjectResponse(string errorCode = default(string), string errorMessage = default(string), bool? hasError = default(bool?), List<TrebuchetWebApiDataContractsCoreLink> links = default(List<TrebuchetWebApiDataContractsCoreLink>), int? pageNumber = default(int?), int? pageSize = default(int?), string parentBusObId = default(string), string parentBusObPublicId = default(string), string parentBusObRecId = default(string), List<TrebuchetWebApiDataContractsBusinessObjectReadResponse> relatedBusinessObjects = default(List<TrebuchetWebApiDataContractsBusinessObjectReadResponse>), string relationshipId = default(string), int? totalRecords = default(int?))
        {
            this.ErrorCode = errorCode;
            this.ErrorMessage = errorMessage;
            this.HasError = hasError;
            this.Links = links;
            this.PageNumber = pageNumber;
            this.PageSize = pageSize;
            this.ParentBusObId = parentBusObId;
            this.ParentBusObPublicId = parentBusObPublicId;
            this.ParentBusObRecId = parentBusObRecId;
            this.RelatedBusinessObjects = relatedBusinessObjects;
            this.RelationshipId = relationshipId;
            this.TotalRecords = totalRecords;
        }
        
        /// <summary>
        /// Gets or Sets ErrorCode
        /// </summary>
        [DataMember(Name="errorCode", EmitDefaultValue=false)]
        public string ErrorCode { get; set; }

        /// <summary>
        /// Gets or Sets ErrorMessage
        /// </summary>
        [DataMember(Name="errorMessage", EmitDefaultValue=false)]
        public string ErrorMessage { get; set; }

        /// <summary>
        /// Gets or Sets HasError
        /// </summary>
        [DataMember(Name="hasError", EmitDefaultValue=false)]
        public bool? HasError { get; set; }

        /// <summary>
        /// Gets or Sets Links
        /// </summary>
        [DataMember(Name="links", EmitDefaultValue=false)]
        public List<TrebuchetWebApiDataContractsCoreLink> Links { get; set; }

        /// <summary>
        /// Gets or Sets PageNumber
        /// </summary>
        [DataMember(Name="pageNumber", EmitDefaultValue=false)]
        public int? PageNumber { get; set; }

        /// <summary>
        /// Gets or Sets PageSize
        /// </summary>
        [DataMember(Name="pageSize", EmitDefaultValue=false)]
        public int? PageSize { get; set; }

        /// <summary>
        /// Gets or Sets ParentBusObId
        /// </summary>
        [DataMember(Name="parentBusObId", EmitDefaultValue=false)]
        public string ParentBusObId { get; set; }

        /// <summary>
        /// Gets or Sets ParentBusObPublicId
        /// </summary>
        [DataMember(Name="parentBusObPublicId", EmitDefaultValue=false)]
        public string ParentBusObPublicId { get; set; }

        /// <summary>
        /// Gets or Sets ParentBusObRecId
        /// </summary>
        [DataMember(Name="parentBusObRecId", EmitDefaultValue=false)]
        public string ParentBusObRecId { get; set; }

        /// <summary>
        /// Gets or Sets RelatedBusinessObjects
        /// </summary>
        [DataMember(Name="relatedBusinessObjects", EmitDefaultValue=false)]
        public List<TrebuchetWebApiDataContractsBusinessObjectReadResponse> RelatedBusinessObjects { get; set; }

        /// <summary>
        /// Gets or Sets RelationshipId
        /// </summary>
        [DataMember(Name="relationshipId", EmitDefaultValue=false)]
        public string RelationshipId { get; set; }

        /// <summary>
        /// Gets or Sets TotalRecords
        /// </summary>
        [DataMember(Name="totalRecords", EmitDefaultValue=false)]
        public int? TotalRecords { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TrebuchetWebApiDataContractsSearchesRelatedBusinessObjectResponse {\n");
            sb.Append("  ErrorCode: ").Append(this.ErrorCode).Append("\n");
            sb.Append("  ErrorMessage: ").Append(this.ErrorMessage).Append("\n");
            sb.Append("  HasError: ").Append(this.HasError).Append("\n");
            sb.Append("  Links: ").Append(this.Links).Append("\n");
            sb.Append("  PageNumber: ").Append(this.PageNumber).Append("\n");
            sb.Append("  PageSize: ").Append(this.PageSize).Append("\n");
            sb.Append("  ParentBusObId: ").Append(this.ParentBusObId).Append("\n");
            sb.Append("  ParentBusObPublicId: ").Append(this.ParentBusObPublicId).Append("\n");
            sb.Append("  ParentBusObRecId: ").Append(this.ParentBusObRecId).Append("\n");
            sb.Append("  RelatedBusinessObjects: ").Append(this.RelatedBusinessObjects).Append("\n");
            sb.Append("  RelationshipId: ").Append(this.RelationshipId).Append("\n");
            sb.Append("  TotalRecords: ").Append(this.TotalRecords).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TrebuchetWebApiDataContractsSearchesRelatedBusinessObjectResponse);
        }

        /// <summary>
        /// Returns true if TrebuchetWebApiDataContractsSearchesRelatedBusinessObjectResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of TrebuchetWebApiDataContractsSearchesRelatedBusinessObjectResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TrebuchetWebApiDataContractsSearchesRelatedBusinessObjectResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ErrorCode == input.ErrorCode ||
                    (this.ErrorCode != null &&
                    this.ErrorCode.Equals(input.ErrorCode))
                ) && 
                (
                    this.ErrorMessage == input.ErrorMessage ||
                    (this.ErrorMessage != null &&
                    this.ErrorMessage.Equals(input.ErrorMessage))
                ) && 
                (
                    this.HasError == input.HasError ||
                    (this.HasError != null &&
                    this.HasError.Equals(input.HasError))
                ) && 
                (
                    this.Links == input.Links ||
                    this.Links != null &&
                    this.Links.SequenceEqual(input.Links)
                ) && 
                (
                    this.PageNumber == input.PageNumber ||
                    (this.PageNumber != null &&
                    this.PageNumber.Equals(input.PageNumber))
                ) && 
                (
                    this.PageSize == input.PageSize ||
                    (this.PageSize != null &&
                    this.PageSize.Equals(input.PageSize))
                ) && 
                (
                    this.ParentBusObId == input.ParentBusObId ||
                    (this.ParentBusObId != null &&
                    this.ParentBusObId.Equals(input.ParentBusObId))
                ) && 
                (
                    this.ParentBusObPublicId == input.ParentBusObPublicId ||
                    (this.ParentBusObPublicId != null &&
                    this.ParentBusObPublicId.Equals(input.ParentBusObPublicId))
                ) && 
                (
                    this.ParentBusObRecId == input.ParentBusObRecId ||
                    (this.ParentBusObRecId != null &&
                    this.ParentBusObRecId.Equals(input.ParentBusObRecId))
                ) && 
                (
                    this.RelatedBusinessObjects == input.RelatedBusinessObjects ||
                    this.RelatedBusinessObjects != null &&
                    this.RelatedBusinessObjects.SequenceEqual(input.RelatedBusinessObjects)
                ) && 
                (
                    this.RelationshipId == input.RelationshipId ||
                    (this.RelationshipId != null &&
                    this.RelationshipId.Equals(input.RelationshipId))
                ) && 
                (
                    this.TotalRecords == input.TotalRecords ||
                    (this.TotalRecords != null &&
                    this.TotalRecords.Equals(input.TotalRecords))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ErrorCode != null)
                    hashCode = hashCode * 59 + this.ErrorCode.GetHashCode();
                if (this.ErrorMessage != null)
                    hashCode = hashCode * 59 + this.ErrorMessage.GetHashCode();
                if (this.HasError != null)
                    hashCode = hashCode * 59 + this.HasError.GetHashCode();
                if (this.Links != null)
                    hashCode = hashCode * 59 + this.Links.GetHashCode();
                if (this.PageNumber != null)
                    hashCode = hashCode * 59 + this.PageNumber.GetHashCode();
                if (this.PageSize != null)
                    hashCode = hashCode * 59 + this.PageSize.GetHashCode();
                if (this.ParentBusObId != null)
                    hashCode = hashCode * 59 + this.ParentBusObId.GetHashCode();
                if (this.ParentBusObPublicId != null)
                    hashCode = hashCode * 59 + this.ParentBusObPublicId.GetHashCode();
                if (this.ParentBusObRecId != null)
                    hashCode = hashCode * 59 + this.ParentBusObRecId.GetHashCode();
                if (this.RelatedBusinessObjects != null)
                    hashCode = hashCode * 59 + this.RelatedBusinessObjects.GetHashCode();
                if (this.RelationshipId != null)
                    hashCode = hashCode * 59 + this.RelationshipId.GetHashCode();
                if (this.TotalRecords != null)
                    hashCode = hashCode * 59 + this.TotalRecords.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
